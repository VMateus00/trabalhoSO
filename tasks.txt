Tasks:

<<<<<<< HEAD
* Criar classe SO que conterá todos os gerenciadores e comecará a executar os processos.

* Crias filas de prioridade (colocar a fila do gerenciador de processos - criar gerenciadorFila) DONE 

=======
>>>>>>> edf34a882371a3f917454cd26f304f37da22c788
* definir e implementar como será o aging (envelhecimento dos processos) -> fica no msm lugar que a fila
    -> filas podem suportar no maximo 1000 processos

* ao iniciar um processo ele deve ocupar um bloco e ao terminar, liberar um bloco de memoria RAM (gerenciador de memoria)

<<<<<<< HEAD

* Ao encerrar o programa, mostrar o estado do disco (já está 99% implementado - só refinar a exibição)

* Separar semaforo de recursos que possuem mais de uma permissão, colocar "nomeDoRecurso"+ (1 | 2), e o respectivo semaforo DONE
=======
* Separar semaforo de recursos que possuem mais de uma permissão, colocar "nomeDoRecurso"+ (1 | 2), e o respectivo semaforo
>>>>>>> edf34a882371a3f917454cd26f304f37da22c788

* criar funcoes de arquivos ao disco (add, remove), testar o estado das listas de execução ao utilizar (se permanecesse consistente)

* Ao executar processos de usuario -> sempre verificar o quantum a cada instrução executada
    -> fazer um SystemCall current Time e vericar o tempo atual (se passou 1s - quantum) da hora que entrou em execucao